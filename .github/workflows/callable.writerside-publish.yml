name: Writerside publish

on:
  workflow_call:
    inputs:
      VERSION:
        description: 'Version name'
        required: true
        type: string
    secrets:
      GH_PAGES_TOKEN:
        required: true
      SIGNING_SECRET:
        required: true
      SIGNING_PASSWORD:
        required: true

permissions:
  pull-requests: write
  contents: write
  repository-projects: write
  packages: write
  pages: write
  id-token: write

env:
  INSTANCE: 'Writerside/cb'
  ARTIFACT: 'webHelpHI2-all.zip'
  DOCKER_VERSION: '233.14938'
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          ref: ${{ github.head_ref }}
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Install SSH Client ðŸ”‘
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.GH_PAGES_TOKEN }}

      - uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3

      - name: Setup git
        run: |
          git remote set-url origin git@github.com:${{ github.repository }}
          git config --local user.email "actions@github.com"
          git config --local user.name "GitHub Action"

      - name: Generate javadoc
        run: ./gradlew javadoc
        env:
          SIGNING_SECRET: ${{ secrets.SIGNING_SECRET }}
          SIGNING_PASSWORD: ${{ secrets.SIGNING_PASSWORD }}

      - name: Build Writerside docs using Docker
        uses: JetBrains/writerside-github-action@v4
        with:
          instance: ${{ env.INSTANCE }}
          artifact: ${{ env.ARTIFACT }}
          docker-version: ${{ env.DOCKER_VERSION }}

      - name: Generate docs folder
        run: sh build-scripts/prepare-web-output.sh
        env:
          docs: ${{ inputs.VERSION }}

      - name: Push docs to gh-pages
        env:
          version: ${{ inputs.VERSION }}
        run: |
          git fetch origin gh-pages
          mkdir gh-pages
          git worktree add gh-pages gh-pages
          
          cp -r $version gh-pages/$version
          
          cd gh-pages
          git add $version
          git commit -m "Add version $version"
          git push origin gh-pages

      - name: Update html
        env:
          version: ${{ inputs.VERSION }}
        run: |
          cd gh-pages
          
          if [ -f "index.html" ]; then
            sed -i 's|url=https://cocoa-beans.apartium.net/[^/]*/">|url=https://cocoa-beans.apartium.net/'"$version"'/">|' "index.html"
            git add index.html
            git commit -m "Update index.html"
            git push origin gh-pages
          else
            echo "index.html not found"
            exit 1
          fi

      - name: Update help-versions.json
        run: ./gradlew generateWritersideVersions
        env:
          VERSION: ${{ inputs.VERSION }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
