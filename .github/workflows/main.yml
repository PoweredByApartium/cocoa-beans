# Simple workflow for deploying static content to GitHub Pages
name: Snapshot run

on:
  push:
    branches: ["release-ci"]

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  packages: write
  pages: write
  id-token: write

env:
  INSTANCE: 'Writerside/cb'
  ARTIFACT: 'webHelpHI2-all.zip'
  DOCKER_VERSION: '233.14938'

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3
      - name: Publish to maven repository
        run: ./gradlew publish
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          APARTIUM_NEXUS_PASSWORD: ${{ secrets.APARTIUM_NEXUS_PASSWORD }}
          APARTIUM_NEXUS_USERNAME: ${{ secrets.APARTIUM_NEXUS_USERNAME }}
      
      - name: Setup git
        run: |
          git config --local user.email "actions@github.com"
          git config --local user.name "GitHub Actions"
      
      - name: Pre writerside
        env:
          new_version: snapshot
        run: |
          input_file="Writerside/writerside.cfg"
          sed -i 's/\(<instance.*version="\)[^"]*"/\1'"$new_version"'"/' "$input_file"
          
          sed -i 's|https://cocoa-beans.apartium.net/[^/]*/spigot/|https://cocoa-beans.apartium.net/'"$new_version"'/spigot/|' "Writerside/topics/ðŸ«˜ Home.md"
          sed -i 's|https://cocoa-beans.apartium.net/[^/]*/common/|https://cocoa-beans.apartium.net/'"$new_version"'/common/|' "Writerside/topics/ðŸ«˜ Home.md"
          sed -i 's|https://cocoa-beans.apartium.net/[^/]*/commands/|https://cocoa-beans.apartium.net/'"$new_version"'/commands/|' "Writerside/topics/ðŸ«˜ Home.md"
          git add .
          git commit -m "Update writerside.cfg and home.md"

      - name: Build Writerside docs using Docker
        uses: JetBrains/writerside-github-action@v4
        with:
          instance: ${{ env.INSTANCE }}
          artifact: ${{ env.ARTIFACT }}
          docker-version: ${{ env.DOCKER_VERSION }}

      - name: run docs script
        env:
          docs: temp_snapshot
        run: |
          sh build-scripts/prepare-web-output.sh

      - name: upload
        uses: actions/upload-artifact@v4
        with:
          path: 'temp_snapshot/'
      
      - name: Generate snapshot docs
        run: |
          git fetch origin
          git checkout -b gh-pages origin/gh-pages || git checkout -b gh-pages
          git pull origin gh-pages || true
          sed -i 's|url=https://cocoa-beans.apartium.net/[^/]*/">|url=https://cocoa-beans.apartium.net/'"$version"'/">|' "index.html"
          git commit -m "Update index.html"

          json_file="help-versions.json"
          new_element=$(cat <<EOF
          {
          "version": "$version",
          "url": "/$version",
          "isCurrent": true
          } 
          EOF
          )

          if [ -d "snapshot" ]; then
            echo "test1"
            git rm -rf snapshot
            git commit -m "Removed old version"

            mv temp_snapshot/ snapshot/
            git add snapshot/

            updated_json=$(jq --arg version "$version" '
                  .[-1].version = $version |
                  .[-1].url = $version |
                  .[-1].isCurrent = true |
                  .[0:-1] |= map(.isCurrent = false)
              ' "$json_file")

            git commit -m "Overide docs"
          else
            echo "test2"
            git add snapshot/

            updated_json=$(jq --argjson new "$new_element" '
                map(.isCurrent = false) + [$new]
            ' "$json_file")
            git commit -m "Update docs"
          fi

          echo "$updated_json" > "$json_file"
          git add help-versions.json
          git commit -m "Update version json"            
          git push origin gh-pages